package org.fdapservice.phone;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.Properties;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;


/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.3-hudson-390-
 * Generated source version: 2.0
 * <p>
 * An example of how this class may be used:
 * 
 * <pre>
 * PhoneCaller service = new PhoneCaller();
 * ITelephone portType = service.getBasicHttpBindingITelephone();
 * portType.call(...);
 * </pre>
 * 
 * </p>
 * 
 */
@WebServiceClient(name = "PhoneCaller", targetNamespace = "http://www.thermoberg.com/Services/TelephoneService", wsdlLocation = "http://10.0.0.1:8090/Services/TelephoneService?wsdl")
public class PhoneCaller extends Service {

	private final static URL PHONECALLER_WSDL_LOCATION;
	private final static Logger logger = Logger
			.getLogger(org.fdapservice.phone.PhoneCaller.class.getName());

	static {
		URL url = null;
		String address = "init";
		try {
			URL baseUrl;
			baseUrl = org.fdapservice.phone.PhoneCaller.class.getResource(".");
			Properties pro = new Properties();
			pro.load(PhoneCaller.class.getResourceAsStream("../../../phone.properties"));
			address = pro.get("address").toString();
			url = new URL(baseUrl,
					"http://" + address + "/Services/TelephoneService?wsdl");
		} catch (MalformedURLException e) {
			logger
					.warning("Failed to create URL for the wsdl Location: 'http://" + address + "/Services/TelephoneService?wsdl', retrying as a local file");
			logger.warning(e.getMessage());
		} catch (Exception e) {
			logger.warning("phoneCaller load resource fail !" + e.getMessage());
		}
		PHONECALLER_WSDL_LOCATION = url;
	}

	public PhoneCaller(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public PhoneCaller() {
		super(PHONECALLER_WSDL_LOCATION, new QName(
				"http://www.thermoberg.com/Services/TelephoneService",
				"PhoneCaller"));
	}

	/**
	 * 
	 * @return returns ITelephone
	 */
	@WebEndpoint(name = "BasicHttpBinding_ITelephone")
	public ITelephone getBasicHttpBindingITelephone() {
		return super.getPort(new QName(
				"http://www.thermoberg.com/Services/TelephoneService",
				"BasicHttpBinding_ITelephone"), ITelephone.class);
	}

}
