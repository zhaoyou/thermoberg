package org.fdapservice.biz.impl;

import java.util.List;

import org.apache.log4j.Logger;
import org.fdapservice.biz.RefRealDataBiz;
import org.fdapservice.dao.RefRealDataDao;
import org.fdapservice.dao.impl.RefRealDataDaoImpl;
import org.fdapservice.entity.RefRealData;
import org.fdapservice.service.UploadService;


/**
 * 冷库实时数据上传业务实现类
 * @author zhaoyou
 *
 */
public class RefRealDataBizImpl implements RefRealDataBiz {

	private RefRealDataDao refRealDataDao = new RefRealDataDaoImpl();
	
	private Logger logger =Logger.getLogger(RefRealDataBizImpl.class) ;
	
	@Override
	public Integer uploadRealData(String code, List<RefRealData> list) {
		
		//验证参数
		if(code==null || code.equals("") || list==null || list.size()==0){
			return UploadService.FAIL ;
		}
		
		//构造探头的字符串对象
		StringBuffer sb = new StringBuffer();
		
			
			try {
				for (Integer i=0 ;i<list.size();i++) {
					sb.append(buildInfo(list.get(i))) ;
					if(i!=list.size()-1)
						sb.append(";");
				}
			//保存执行存储过程的结果
			Integer result = 	refRealDataDao.addRefRealData(code, sb.toString());
		
			if(result.toString().equals("0")){
				return UploadService.SUCCESS ;
			}
			return UploadService.FAIL ;
		} catch (Exception e) {
			logger.error("上传冷库实时数据失败:"+e.getMessage()) ;
			return UploadService.ERROR ;
		}
	}
	
	/**
	 * 构造探头的信息的字符串
	 * @param data		单个探头的信息 
	 * @return				返回的字符串格式:	{id,VALUE,time,status}
	 */
	private String buildInfo(RefRealData data){
		StringBuffer sb = new StringBuffer("");
		sb.append(data.getId()+",") ;
		sb.append(data.getValue()+",");
		sb.append(data.getTime()+",");
		sb.append(data.getStatus());
		return sb.toString() ;
	}

}
